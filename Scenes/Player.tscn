[gd_scene load_steps=10 format=2]

[ext_resource path="res://Assets/Characters/Player (Stone).png" type="Texture" id=1]
[ext_resource path="res://Assets/Characters/Player (BeachBall).png" type="Texture" id=2]
[ext_resource path="res://Assets/Characters/Player (Normal).png" type="Texture" id=3]
[ext_resource path="res://Assets/Fonts/BebasNueueFont.tres" type="DynamicFont" id=4]

[sub_resource type="GDScript" id=2]
script/source = "extends KinematicBody2D

# ---------- VARIABLES ---------- #

# NORMAL
export (Texture) var normalBall
export (Texture) var beachBall
export (Texture) var stoneBall

export (float) var speed = 600
export (float) var gravity = 30
export (float) var jumpForce = 700
export (float) var rotatingSpeed = 500
export (float) var lerpFactor = 10
var jumpCount = 2
var index = 0

# BOOLEANS
var isMoving = true
var canSwitch = true
var isDead = false

# VECTOR
export (Vector2) var defaultScale = Vector2(0.6, 0.6)
export (Vector2) var stretchedScale = Vector2(0.4, 0.75)
var velocity := Vector2.ZERO
var direction = Vector2.ZERO

# ONREADY
onready var playerAnims = $PlayerAnims
onready var sprite = $Sprite
onready var textures = [normalBall, beachBall, stoneBall]
onready var label = $Label

# ---------- BUILT-IN FUNCTIONS ---------- #

func _ready():
	label.visible = false

func _process(delta):
	sprite.texture = getCurrentTexture()

func _physics_process(delta):
	if !isDead:
		movement(delta)
		characterSwitch()
		characterAbilities()

# ---------- CUSTOM FUNCTIONS ---------- #

func movement(delta):
	if !is_on_floor():
		velocity.y += gravity
	else:
		jumpCount = 2

	if Input.is_action_just_pressed(\"Jump\") and jumpCount > 0:
		jumpAnimation()
		velocity.y = -jumpForce
		jumpCount -= 1
	
	var horizontalAxis = Input.get_axis(\"Left\", \"Right\")
	getInput(horizontalAxis, delta)
	
	velocity = move_and_slide(velocity, Vector2.UP)

func getInput(horizontalAxis: float, delta):
	if horizontalAxis == 1:
		velocity.x = speed
		sprite.rotation_degrees += deg2rad(rotatingSpeed)
		isMoving = true
	elif horizontalAxis == -1:
		velocity.x = -speed
		sprite.rotation_degrees -= deg2rad(rotatingSpeed)
		isMoving = true
	else:
		velocity.x = lerp(velocity.x, 0, lerpFactor * delta)
		isMoving = false

func jumpAnimation():
	var tween = get_tree().create_tween()
	tween.tween_property(sprite, \"scale\", stretchedScale, 0.1)
	tween.tween_property(sprite, \"scale\", defaultScale, 0.2)

func switchAnimation():
	var tween = get_tree().create_tween()
	tween.tween_property(sprite, \"scale\", Vector2(0.65,0.65), 0.1)
	tween.tween_property(sprite, \"scale\", Vector2(0,0), 0.1)
	tween.tween_property(sprite, \"scale\", defaultScale, 0.1)
	yield (tween, \"step_finished\")
	scrollToNextTexture()

func characterSwitch():
	if canSwitch:
		if Input.is_action_just_pressed(\"Switch\"):
			switchAnimation()

func characterAbilities():
	match index:
		0:
			speed = 400
			gravity = 30
			rotatingSpeed = 500
		1:
			speed = 500
			gravity = 20
			rotatingSpeed = 600
		2:
			speed = 250
			gravity = 50
			rotatingSpeed = 300

func scrollToNextTexture():
	index = posmod(index + 1, textures.size())

func getCurrentTexture():
	return textures[index]

# ---------- SIGNALS ---------- #

func _on_Collision_body_entered(body):
	if body.is_in_group(\"Traps\") and index != 2:
		isDead = true
		playerAnims.play(\"Death\")

func _on_PlayerAnims_animation_finished(anim_name):
	if anim_name == \"Death\":
		get_tree().reload_current_scene()

"

[sub_resource type="Animation" id=4]
resource_name = "Death"
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( -2, -2, -2 ),
"update": 0,
"values": [ Vector2( 0.6, 0.6 ), Vector2( 0.7, 0.7 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.6, 0.6 ) ]
}

[sub_resource type="CircleShape2D" id=1]
radius = 31.0161

[sub_resource type="CircleShape2D" id=3]
radius = 32.3883

[node name="Player" type="KinematicBody2D"]
script = SubResource( 2 )
normalBall = ExtResource( 3 )
beachBall = ExtResource( 2 )
stoneBall = ExtResource( 1 )

[node name="PlayerAnims" type="AnimationPlayer" parent="."]
anims/Death = SubResource( 4 )
anims/RESET = SubResource( 5 )

[node name="Sprite" type="Sprite" parent="."]
scale = Vector2( 0.6, 0.6 )
texture = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )

[node name="Collision" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Collision"]
shape = SubResource( 3 )

[node name="Label" type="Label" parent="."]
margin_left = -100.0
margin_top = -110.0
margin_right = 105.0
margin_bottom = -51.0
custom_fonts/font = ExtResource( 4 )
text = "\"F\" To Pickup"

[connection signal="animation_finished" from="PlayerAnims" to="." method="_on_PlayerAnims_animation_finished"]
[connection signal="body_entered" from="Collision" to="." method="_on_Collision_body_entered"]
